{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ssamantray/Documents/boilerplate/next-redux-material-ui/src/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport makeStore from '../store';\nimport Layout from '../theming/layout';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theming/theme';\nimport './style.scss';\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Remove the server-side injected CSS.\n      var jssStyles = document.querySelector('#jss-server-side');\n\n      if (jssStyles) {\n        jssStyles.parentElement.removeChild(jssStyles);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"Catalent\"), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      })), __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, __jsx(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                // we can dispatch from here too\n                ctx.store.dispatch({\n                  type: 'FOO',\n                  payload: 'foo'\n                });\n\n                if (!Component.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                _context.t0 = _context.sent;\n                _context.next = 9;\n                break;\n\n              case 8:\n                _context.t0 = {};\n\n              case 9:\n                pageProps = _context.t0;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/ssamantray/Documents/boilerplate/next-redux-material-ui/src/pages/_app.js"],"names":["React","createStore","Provider","App","Head","withRedux","makeStore","Layout","ThemeProvider","CssBaseline","theme","MyApp","jssStyles","document","querySelector","parentElement","removeChild","props","Component","pageProps","store","ctx","dispatch","type","payload","getInitialProps"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,cAAP;AAGA;;;;;;;;;IAUMC,K;;;;;;;;;;;;;wCASkB;AAChB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,UAAIF,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;AACJ;;;6BAEQ;AAAA,wBACmC,KAAKK,KADxC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAAA,UACyBC,KADzB,eACyBA,KADzB;AAGL,aACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,OAAO,EAAC,wEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAQI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEV,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEU,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,CAFJ,CARJ,CADJ;AAoBH;;;;;;;;;;AAtC8BD,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACtC;AACAA,gBAAAA,GAAG,CAACD,KAAJ,CAAUE,QAAV,CAAmB;AAAEC,kBAAAA,IAAI,EAAE,KAAR;AAAeC,kBAAAA,OAAO,EAAE;AAAxB,iBAAnB;;qBACkBN,SAAS,CAACO,e;;;;;;uBAAwBP,SAAS,CAACO,eAAV,CAA0BJ,GAA1B,C;;;;;;;;8BAAiC,E;;;AAA/EF,gBAAAA,S;iDAEC;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAPKhB,G;;AA4CpB,eAAeE,SAAS,CAACC,SAAD,CAAT,CAAqBK,KAArB,CAAf","sourcesContent":["\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport makeStore from '../store'\nimport Layout from '../theming/layout';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theming/theme';\n\nimport './style.scss' \n\n\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\n\nclass MyApp extends App {\n\n    static async getInitialProps({ Component, ctx }) {\n        // we can dispatch from here too\n        ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n        \n        return { pageProps };\n    }\n    componentDidMount() {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n          jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }\n\n    render() {\n        const { Component, pageProps, store } = this.props;\n    \n        return (\n            <React.Fragment>\n                <Head>\n                    <title>Catalent</title>\n                    <meta\n                        name=\"viewport\"\n                        content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n                    />\n                </Head>\n                <ThemeProvider theme={theme}>\n                    \n                    <Provider store={store}>\n                        <Layout>\n                            <CssBaseline />\n                            <Component {...pageProps} />\n                        </Layout>\n                    </Provider>\n                </ThemeProvider>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}