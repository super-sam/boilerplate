{"ast":null,"code":"var _jsxFileName = \"/Users/ssamantray/Documents/boilerplate/next-redux-material-ui/src/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport makeStore from '../store';\nimport Layout from '../theming/layout';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theming/theme';\nimport './style.scss';\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Catalent\"), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })), __jsx(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/ssamantray/Documents/boilerplate/next-redux-material-ui/src/pages/_app.js"],"names":["React","createStore","Provider","App","Head","withRedux","makeStore","Layout","ThemeProvider","CssBaseline","theme","MyApp","getInitialProps","Component","ctx","store","dispatch","type","payload","pageProps","componentDidMount","jssStyles","document","querySelector","parentElement","removeChild","render","props"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,cAAP;AAGA;;;;;;;;;AAUA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AAEpB,eAAaS,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC7C;AACAA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAnB;AACA,UAAMC,SAAS,GAAGN,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAAEK,MAAAA;AAAF,KAAP;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;AACJ;;AAEDK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEb,MAAAA,SAAF;AAAaM,MAAAA,SAAb;AAAwBJ,MAAAA;AAAxB,QAAkC,KAAKY,KAA7C;AAEA,WACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAC,wEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAQI,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEjB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEK,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADJ,CAFJ,CARJ,CADJ;AAoBH;;AAxCmB;;AA4CxB,eAAed,SAAS,CAACC,SAAD,CAAT,CAAqBK,KAArB,CAAf","sourcesContent":["\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport withRedux from \"next-redux-wrapper\";\nimport makeStore from '../store'\nimport Layout from '../theming/layout';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theming/theme';\n\nimport './style.scss' \n\n\n/**\n* @param {object} initialState\n* @param {boolean} options.isServer indicates whether it is a server side or client side\n* @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n* @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n* @param {boolean} options.debug User-defined debug mode param\n* @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR \n*/\n\n\nclass MyApp extends App {\n\n    static async getInitialProps({ Component, ctx }) {\n        // we can dispatch from here too\n        ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n        \n        return { pageProps };\n    }\n    componentDidMount() {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n          jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }\n\n    render() {\n        const { Component, pageProps, store } = this.props;\n    \n        return (\n            <React.Fragment>\n                <Head>\n                    <title>Catalent</title>\n                    <meta\n                        name=\"viewport\"\n                        content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n                    />\n                </Head>\n                <ThemeProvider theme={theme}>\n                    \n                    <Provider store={store}>\n                        <Layout>\n                            <CssBaseline />\n                            <Component {...pageProps} />\n                        </Layout>\n                    </Provider>\n                </ThemeProvider>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}