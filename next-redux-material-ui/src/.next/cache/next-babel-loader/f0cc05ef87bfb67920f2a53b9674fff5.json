{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\nlet composeEnhancers = compose;\n\nif (false && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n  composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n}\n\nconst loogerAndThunkMiddleWare = [thunk, logger];\nconst initialState = {};\nconst middleWare = [applyMiddleware(...loogerAndThunkMiddleWare)];\n\nconst store = () => {\n  return createStore(rootReducer, initialState, composeEnhancers(...middleWare));\n};\n\nexport default store;","map":{"version":3,"sources":["/Users/ssamantray/Documents/boilerplate/next-redux-material-ui/src/store/index.js"],"names":["createStore","applyMiddleware","compose","logger","thunk","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","loogerAndThunkMiddleWare","initialState","middleWare","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,IAAIC,gBAAgB,GAAGJ,OAAvB;;AACA,IAAI,SAA8BK,MAAM,CAACC,oCAAzC,EAA8E;AAC1EF,EAAAA,gBAAgB,GAAGC,MAAM,CAACC,oCAA1B;AACH;;AAED,MAAMC,wBAAwB,GAAG,CAC7BL,KAD6B,EAE7BD,MAF6B,CAAjC;AAKA,MAAMO,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CACfV,eAAe,CAAC,GAAGQ,wBAAJ,CADA,CAAnB;;AAKA,MAAMG,KAAK,GAAG,MAAM;AAChB,SAAOZ,WAAW,CACdK,WADc,EAEdK,YAFc,EAGdJ,gBAAgB,CAAC,GAAGK,UAAJ,CAHF,CAAlB;AAKH,CAND;;AAQA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk';\n\nimport rootReducer from '../reducers';\n\nlet composeEnhancers = compose;\nif (typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__){\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n}\n\nconst loogerAndThunkMiddleWare = [\n    thunk,\n    logger\n]\n\nconst initialState = {};\n\nconst middleWare = [\n    applyMiddleware(...loogerAndThunkMiddleWare)\n];\n\n\nconst store = () => {\n    return createStore(\n        rootReducer,\n        initialState,\n        composeEnhancers(...middleWare)\n    );\n}\n\nexport default store;"]},"metadata":{},"sourceType":"module"}